/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: do not edit it. Instead, edit the BAML
// files and re-generate this code.
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code
import type { Image, Audio } from "@boundaryml/baml"

/**
 * Recursively partial type that can be null.
 *
 * @deprecated Use types from the `partial_types` namespace instead, which provides type-safe partial implementations
 * @template T The type to make recursively partial.
 */
export type RecursivePartialNull<T> = T extends object
    ? { [P in keyof T]?: RecursivePartialNull<T[P]> }
    : T | null;

export interface Checked<T,CheckName extends string = string> {
    value: T,
    checks: Record<CheckName, Check>,
}


export interface Check {
    name: string,
    expr: string
    status: "succeeded" | "failed"
}

export function all_succeeded<CheckName extends string>(checks: Record<CheckName, Check>): boolean {
    return get_checks(checks).every(check => check.status === "succeeded")
}

export function get_checks<CheckName extends string>(checks: Record<CheckName, Check>): Check[] {
    return Object.values(checks)
}
export interface ArticleCheckResult {
  title: string
  markdownContent: string
  
}

export interface ArticleGenerationResult {
  title: string
  markdownContent: string
  articleType: string
  
}

/**
 * 文章初步生成工具
 */
export interface ArticleGenerationTool {
  event: "tool"
  data: "ArticleGenerationTool"
  
}

export interface ArticleMemorySaveEvent {
  event: "memory_saved"
  data: "memory_data"
  
}

export interface ArticleOptimizeResult {
  title: string
  markdownContent: string
  articleType: string
  
}

export interface EventMessage {
  eventName: string
  dataContent: string
  
}

export interface MemoryRetrivalTool {
  event: "tool"
  
}

/**
 * 对于比较长的上下文记忆，需要通过 MemoryStateToolData 工具去获取相应的记忆
 */
export interface MemoryStateToolData {
  toolName: string
  dataContent: string
  
}

/**
 * 让用户确认任务是否完成
 */
export interface RequestHumanForConfirmation {
  event: "request_human"
  data: "isTaskFinished"
  
}

/**
 * 让用户确认当前生成的内容是否满足需求
 */
export interface RequestHumanForSatisfaction {
  event: "request_human"
  data: "isSatisfaction?"
  
}

export interface Resume {
  name: string
  email: string
  experience: string[]
  skills: string[]
  
}

export interface RuleSet {
  content: string
  
}

export interface StopEvent {
  event: "stop"
  data?: null | null
  
}
